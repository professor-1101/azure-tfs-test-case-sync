# Azure Test Plan Import API - Nginx Configuration
# Place this in: /etc/nginx/sites-available/azure-test-api
# Then: sudo ln -s /etc/nginx/sites-available/azure-test-api /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name your-server.com;  # Change to your domain/IP
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # API endpoint
    location / {
        proxy_pass http://127.0.0.1:5050;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;
        
        # File upload size limit
        client_max_body_size 100M;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:5050/health;
        access_log off;
    }

    # Static files (if any)
    location /static {
        alias /opt/azure-test-api/static;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Logging
    access_log /var/log/nginx/azure-test-api.access.log;
    error_log /var/log/nginx/azure-test-api.error.log;
}

# SSL configuration (recommended for production)
# Uncomment and configure for HTTPS:
# server {
#     listen 443 ssl http2;
#     server_name your-server.com;
#     
#     # SSL certificate (use Let's Encrypt: sudo certbot --nginx)
#     ssl_certificate /etc/letsencrypt/live/your-server.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-server.com/privkey.pem;
#     
#     # Security headers and same location blocks as HTTP version above
# }
